<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warm.system.mapper.PersonalNoPhoneTaskFinishMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.warm.system.entity.PersonalNoPhoneTaskFinish">
        <id column="id" property="id" />
        <result column="task_group_id" property="taskGroupId" />
        <result column="tname" property="tname" />
        <result column="step" property="step" />
        <result column="robot_id" property="robotId" />
        <result column="status" property="status" />
        <result column="tdescription" property="tdescription" />
        <result column="task_json" property="taskJson" />
        <result column="group_pool_id" property="groupPoolId" />
        <result column="wx_group_id" property="wxGroupId" />
        <result column="task_finished_tag" property="taskFinishedTag" />
        <result column="create_time" property="createTime" />
        <result column="pickup_time" property="pickupTime" />
        <result column="is_client_feedback_received" property="isClientFeedbackReceived" />
        <result column="feedback_received_time" property="feedbackReceivedTime" />
        <result column="is_client_feedback_finished" property="isClientFeedbackFinished" />
        <result column="feedback_finished_time" property="feedbackFinishedTime" />
        <result column="failed_reason" property="failedReason" />
        <result column="content" property="content" />
        <result column="content_type" property="contentType" />
        <result column="task_type" property="taskType" />
    </resultMap>

    <insert id="add" parameterType="com.warm.system.entity.PersonalNoPhoneTaskFinish" useGeneratedKeys="true" keyProperty="entity.id">
        insert into ${entity.db}
          (id,task_group_id,tname,step,robot_id,status,tdescription,task_json,group_pool_id,wx_group_id,task_finished_tag
          ,create_time,pickup_time,is_client_feedback_received,feedback_received_time,is_client_feedback_finished,feedback_finished_time,failed_reason
          ,content,content_type,task_type)
        values
          (#{entity.id},#{entity.taskGroupId},#{entity.tname},#{entity.step},#{entity.robotId},#{entity.status},#{entity.tdescription},#{entity.taskJson},#{entity.groupPoolId},#{entity.groupPoolId},#{entity.taskFinishedTag}
          ,#{entity.createTime},#{entity.pickupTime},#{entity.isClientFeedbackReceived},#{entity.feedbackReceivedTime},#{entity.isClientFeedbackReceived},#{entity.feedbackFinishedTime},#{entity.failedReason}
          ,#{entity.content},#{entity.contentType},#{entity.taskType})
    </insert>

    <update id="updateOne" parameterType="com.warm.system.entity.PersonalNoPhoneTaskFinish" useGeneratedKeys="true" keyProperty="entity.id">
        UPDATE ${entity.db}
        <set>
            <if test="entity.taskGroupId!=null">
                task_group_id = #{entity.taskGroupId},
            </if>
            <if test="entity.tname!=null">
                tname = #{entity.tname},
            </if>
            <if test="entity.step!=null">
                step = #{entity.step},
            </if>
            <if test="entity.robotId!=null">
                robot_id = #{entity.robotId},
            </if>
            <if test="entity.status!=null">
                status = #{entity.status},
            </if>
            <if test="entity.tdescription!=null">
                tdescription = #{entity.tdescription},
            </if>
            <if test="entity.taskJson!=null">
                task_json = #{entity.taskJson},
            </if>
            <if test="entity.groupPoolId!=null">
                group_pool_id = #{entity.groupPoolId},
            </if>
            <if test="entity.groupPoolId!=null">
                wx_group_id = #{entity.groupPoolId},
            </if>
            <if test="entity.taskFinishedTag!=null">
                task_finished_tag = #{entity.taskFinishedTag},
            </if>
            <if test="entity.createTime!=null">
                create_time = #{entity.createTime},
            </if>
            <if test="entity.pickupTime!=null">
                pickup_time = #{entity.pickupTime},
            </if>
            <if test="entity.isClientFeedbackReceived!=null">
                is_client_feedback_received = #{entity.isClientFeedbackReceived},
            </if>
            <if test="entity.feedbackReceivedTime!=null">
                feedback_received_time = #{entity.feedbackReceivedTime},
            </if>
            <if test="entity.isClientFeedbackReceived!=null">
                is_client_feedback_finished = #{entity.isClientFeedbackReceived},
            </if>
            <if test="entity.feedbackFinishedTime!=null">
                feedback_finished_time = #{entity.feedbackFinishedTime},
            </if>
            <if test="entity.failedReason!=null">
                failed_reason = #{entity.failedReason},
            </if>
            <if test="entity.content!=null">
                content = #{entity.content},
            </if>
            <if test="entity.contentType!=null">
                content_type = #{entity.contentType},
            </if>
            <if test="entity.taskType!=null">
                task_type = #{entity.taskType},
            </if>
        </set>
        where id = #{entity.id}
    </update>

</mapper>
